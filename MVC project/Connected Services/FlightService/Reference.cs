//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MVC_project.FlightService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="FlightService.IFlight")]
    public interface IFlight {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFlight/GetFlights", ReplyAction="http://tempuri.org/IFlight/GetFlightsResponse")]
        AppService.DTOs.FlightsDTO[] GetFlights();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFlight/GetFlights", ReplyAction="http://tempuri.org/IFlight/GetFlightsResponse")]
        System.Threading.Tasks.Task<AppService.DTOs.FlightsDTO[]> GetFlightsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFlight/GetFlightsByDestination", ReplyAction="http://tempuri.org/IFlight/GetFlightsByDestinationResponse")]
        AppService.DTOs.FlightsDTO[] GetFlightsByDestination(string destination);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFlight/GetFlightsByDestination", ReplyAction="http://tempuri.org/IFlight/GetFlightsByDestinationResponse")]
        System.Threading.Tasks.Task<AppService.DTOs.FlightsDTO[]> GetFlightsByDestinationAsync(string destination);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFlight/GetFlightsById", ReplyAction="http://tempuri.org/IFlight/GetFlightsByIdResponse")]
        AppService.DTOs.FlightsDTO GetFlightsById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFlight/GetFlightsById", ReplyAction="http://tempuri.org/IFlight/GetFlightsByIdResponse")]
        System.Threading.Tasks.Task<AppService.DTOs.FlightsDTO> GetFlightsByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFlight/PostFlight", ReplyAction="http://tempuri.org/IFlight/PostFlightResponse")]
        string PostFlight(AppService.DTOs.FlightsDTO flightsDTO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFlight/PostFlight", ReplyAction="http://tempuri.org/IFlight/PostFlightResponse")]
        System.Threading.Tasks.Task<string> PostFlightAsync(AppService.DTOs.FlightsDTO flightsDTO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFlight/DeleteFlight", ReplyAction="http://tempuri.org/IFlight/DeleteFlightResponse")]
        string DeleteFlight(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFlight/DeleteFlight", ReplyAction="http://tempuri.org/IFlight/DeleteFlightResponse")]
        System.Threading.Tasks.Task<string> DeleteFlightAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFlight/UpdateFlight", ReplyAction="http://tempuri.org/IFlight/UpdateFlightResponse")]
        string UpdateFlight(AppService.DTOs.FlightsDTO flightsDTO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFlight/UpdateFlight", ReplyAction="http://tempuri.org/IFlight/UpdateFlightResponse")]
        System.Threading.Tasks.Task<string> UpdateFlightAsync(AppService.DTOs.FlightsDTO flightsDTO);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IFlightChannel : MVC_project.FlightService.IFlight, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class FlightClient : System.ServiceModel.ClientBase<MVC_project.FlightService.IFlight>, MVC_project.FlightService.IFlight {
        
        public FlightClient() {
        }
        
        public FlightClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public FlightClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FlightClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FlightClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public AppService.DTOs.FlightsDTO[] GetFlights() {
            return base.Channel.GetFlights();
        }
        
        public System.Threading.Tasks.Task<AppService.DTOs.FlightsDTO[]> GetFlightsAsync() {
            return base.Channel.GetFlightsAsync();
        }
        
        public AppService.DTOs.FlightsDTO[] GetFlightsByDestination(string destination) {
            return base.Channel.GetFlightsByDestination(destination);
        }
        
        public System.Threading.Tasks.Task<AppService.DTOs.FlightsDTO[]> GetFlightsByDestinationAsync(string destination) {
            return base.Channel.GetFlightsByDestinationAsync(destination);
        }
        
        public AppService.DTOs.FlightsDTO GetFlightsById(int id) {
            return base.Channel.GetFlightsById(id);
        }
        
        public System.Threading.Tasks.Task<AppService.DTOs.FlightsDTO> GetFlightsByIdAsync(int id) {
            return base.Channel.GetFlightsByIdAsync(id);
        }
        
        public string PostFlight(AppService.DTOs.FlightsDTO flightsDTO) {
            return base.Channel.PostFlight(flightsDTO);
        }
        
        public System.Threading.Tasks.Task<string> PostFlightAsync(AppService.DTOs.FlightsDTO flightsDTO) {
            return base.Channel.PostFlightAsync(flightsDTO);
        }
        
        public string DeleteFlight(int id) {
            return base.Channel.DeleteFlight(id);
        }
        
        public System.Threading.Tasks.Task<string> DeleteFlightAsync(int id) {
            return base.Channel.DeleteFlightAsync(id);
        }
        
        public string UpdateFlight(AppService.DTOs.FlightsDTO flightsDTO) {
            return base.Channel.UpdateFlight(flightsDTO);
        }
        
        public System.Threading.Tasks.Task<string> UpdateFlightAsync(AppService.DTOs.FlightsDTO flightsDTO) {
            return base.Channel.UpdateFlightAsync(flightsDTO);
        }
    }
}
